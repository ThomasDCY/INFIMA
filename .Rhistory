input_data$A
input_data$A.t
do.call('rbind', res)
names(infima_results)
names(infima_results$results)
length(infima_results$results)
results
infima
input_data$do.eqtl
x <- infima_results
infima <- x$infima
results <- x$results
results
results <- results[sapply(results, function(x) !is.null(x))]
results
# find the indices
ensembls <- sapply(results, function(x) x$input_data$do.eqtl$ensembl)
ensembls
which(ensembls == 'sdfsd')
match(ensembls,'sdfsd')
ensembl <- 'ENSMUSG00000037995'
ensembl
ensembl %in% ensembls
! ensembl %in% ensembls
results <- results[ensembls == ensembl]
results
results
infima <- x$infima
results <- x$results
results <- results[sapply(results, function(x) !is.null(x))]
# find the indices
ensembls <- sapply(results, function(x) x$input_data$do.eqtl$ensembl)
qtl_markers <- sapply(results, function(x) x$input_data$do.eqtl$qtl_marker)
ensembls
qtl_markers
qtl_marker = 1_172713578
qtl_marker = '1_172713578'
if(! ensembl %in% ensembls){
message('ensembl id not found!')
return(NULL)
}
if(! qtl_marker %in% qtl_markers){
message('qtl_marker id not found!')
return(NULL)
}
if(! (ensembl %in% ensembls && qtl_marker %in% qtl_markers) ){
message('ensembl and qtl marker combination not found!')
return(NULL)
}
results <- results[ensembls == ensembl & qtl_markers == qtl_marker]
results
current <- results
current
input_data <- current$input_data
input_data
input_data
current[[1]]
current <- results[[1]]
input_data <- current$input_data
current$output_data
input_data <- current$input_data
names(input_data)
snps <- input_data$snpData$snp_id
snps
Y
input_data$Y
input_data$A
input_data$B.t
ind <- snps == snp_id
snp_id <- "rs51076312"
ind <- snps == snp_id
res <- list(Y = input_data$Y,
Y.t = input_data$Y.t,
A = input_data$A[ind,],
A.t = input_data$A.t[ind,],
B = input_data$B,
B.avg = input_data$B.avg,
B.t = input_data$B.t,
D = input_data$D[ind,],
E.t = input_data$E.t[ind,],
snpData = input_data$snpData[ind,])
res
document()
?input_query
document()
?raw_Data
?input_query
?raw_data
?model_data
document()
?raw_data
?model_data
?input_query
document
document()
?prior
document()
?infima
?Y
document()
?infima_results
res
input_data$do.eqtl
document()
?as.data.frame
?as.data.frame.infima_results
?dist
document()
document()
vignette()
document()
load_all()
vignette('INFIMA')
browseVignettes()
vignette()
?vignette
vignette(package = 'INFIMA')
build_vignettes()
build_vignettes()
build_vignettes()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocStyle")
build_vignettes()
devtools::clean_vignettes()
devtools::build()
library(INFIMA)
vignette(package = 'INFIMA')
ls()
install()
build_vignettes()
?build_vignettes
build_vignettes(pkg = 'INFIMA')
ls()
library(devtools)
getwd()
build_vignettes()
?install_github
ls()
getwd()
data('data/example-10-genes.rda')
data('example-10-genes')
ls()
library(data.table)
dt1
library(INFIMA)
dt1
dt2
dt3
library(INFIMA)
data('example-10-genes')
dt1
library(INFIMA)
# data('example-10-genes')
dt1
rm(list = ls())
ls()
dt1
dt2
dt3
library(INFIMA)
dt1
ls()
data("example-10-genes")
ls()
dt1
build()
library(devtools)
build()
install()
library(INFIMA)
document()
load_all()
dt1
ls()
rm(list = ls())
dt1
?Z
build()
install()
library(INFIMA)
dt1
ls()
dt1
data("example-10-genes")
dt1
load("/Users/ThomasDCY/Documents/GitHub/INFIMA/data/example-10-genes.rda")
dt1
dt2
dt3
data("example-10-genes")
ls()
dt1
rm(list = ls())
data("example-10-genes")
rm(list = ls())
dt1
library(INFIMA)
dt1
ls()
dt1
dt2
dt3
data("example-10-genes")
ls()
dt1
4800*0.71
4800*0.71、560
4800*0.71/560
3400*0.71/560
dt2
rm(list = ls())
library(data.table)
# setwd('~/Documents/GitHub/INFIMA/data/')
load('~/Documents/AlanAttie4/EM/run090319/input_data_filtered.RData')
load('~/Documents/AlanAttie4/RNA-seq/countmat_13568_protein_coding_UQUA.RData')
# filter out different chr cases
indicator <- do.eqtl$chr == do.eqtl$qtl_chr # 10396 rows left
YY <- YY[indicator,] # 10396*8
do.eqtl <- do.eqtl[indicator]
index.founder <- do.eqtl$index_founder
#### INPUT DATASET 1: DO-eQTL data
# A=A/J, B=B6, C=129, D=NOD, E=NZO, F=CAST, G=PWK, H=WSB
Y <- do.eqtl[,A:H]
Y <- Y[,c(3,1,2,6,4,5,7,8)]
colnames(Y) <- c('129','AJ','B6','CAST','NOD','NZO','PWK','WSB')
do.eqtl <- cbind(do.eqtl[,-(A:H)], Y)
do.eqtl$cis <- NULL
do.eqtl$index_founder <- NULL
dt1 <- do.eqtl
#### INPUT DATASET 2: RNA-seq data
rna.seq <- as.data.table(countmat.n)[index.founder]
samples <- sapply(colnames(rna.seq), function(x){
strsplit(x, '-')[[1]][1]
})
names(samples) <- NULL
colnames(rna.seq) <- samples
dt2 <- rna.seq
dt2
dt1
gsub('Cast', 'CAST', colnames(dt2))
colnames(dt2) <- gsub('Cast', 'CAST', colnames(dt2))
dt2
#### INPUT DATASET 3: ATAC-seq data and the local-ATAC-QTL data
colnames(snpData)
atac.seq <- as.data.table(AA)
colnames(atac.seq) <- paste0(colnames(atac.seq),'-ATAC-seq')
genotype <- as.data.table(EE)
colnames(genotype) <- paste0(colnames(genotype),'-genotype')
snp.info <- as.data.table(snpData)[,c('Name','Chr','SNP','REF','ALT')]
colnames(snp.info) <- c('snp_id','chr','snp_pos','ref','alt')
dt3 <- cbind(snp.info, genotype, atac.seq)
dt3$footprint <- FF
dt3
gsub('Cast', 'CAST', colnames(dt3))
colnames(dt3) <- gsub('Cast', 'CAST', colnames(dt3))
save(dt1, dt2, dt3, file = '~/Documents/GitHub/INFIMA/others/inputs.RData')
write.table(dt1[chr == 'chr1'], file = '~/Documents/GitHub/INFIMA/others/input1-chr1.csv', sep = ',',
quote = F, row.names = F, col.names = T)
write.table(dt2[dt1$chr == 'chr1'], file = '~/Documents/GitHub/INFIMA/others/input2-chr1.csv', sep = ',',
quote = F, row.names = F, col.names = T)
write.table(dt3[chr == 'chr1'], file = '~/Documents/GitHub/INFIMA/others/input3-chr1.csv', sep = ',',
quote = F, row.names = F, col.names = T)
ind <- dt1$chr == 'chr1'
dt1 <- dt1[ind]
dt2 <- dt2[ind]
dt3 <- dt3[chr == 'chr1']
save(dt1, dt2, dt3, file = '~/Documents/GitHub/INFIMA/others/inputs-chr1.RData')
filename1 <- '~/Documents/GitHub/INFIMA/others/input1-chr1.csv'
filename2 <- '~/Documents/GitHub/INFIMA/others/input2-chr1.csv'
filename3 <- '~/Documents/GitHub/INFIMA/others/input3-chr1.csv'
dt1 <- fread(filename1)
dt2 <- fread(filename2)
dt3 <- fread(filename3)
dt1 <- dt1[1:10]
dt2 <- dt2[1:10]
save(dt1, dt2, dt3, file = '~/Documents/GitHub/INFIMA/data/example-10-genes.rda')
dt1
dt2
dt3
rm(list = ls())
ls()
dt1
data("example-10-genes")
dt1
document()
library(devtools)
document()
build()
install()
3000000*0.03*7/365
bark <- c(29, 10, 15, 41, 18, 18, 12, 45,
34, 30, 22, 26, 18, 40, 47, 38,
59, 45, 52, 57, 50, 50, 49, 50, 43)
sort(bark)
length(bark)
mean(bark)
mean(bark)
sum(bark)/length(bark)
paste(sort(bark), collapse = ', ')
median(bark)
summary(bark)
25*0.25
25*0.75
sum((bark - mean(bark))^2)
sum((bark - mean(bark))^2)/length(bark)
var(bark)
sum((bark - mean(bark))^2)/(length(bark) - 1)
var(bark)
sd(bark)
max(bark) - min(bark)
IQR(bark)
0.02*360
0.02*365
d <- c(34,29,23,31,34,28,32,39)
mean(d)
d <- c(34,29,23,31,34,28,32,29)
mean(d)
var(d)
92/7
sd(d)
library(data.table)
library(ggplot2)
library(GenomicAlignments)
library(RColorBrewer)
library(pheatmap)
library(viridis)
library(corrplot)
# load('~/Dropbox/AlanAttie4/MethodA/IDR_master_peak_list_trimmed_with_counts.RData')
# max.width <- 3000
# countMatScaled <- countMatScaled[width(peaks) <= max.width, ]
# corr.mat <- cor(countMatScaled)
# save(corr.mat, file = '~/Desktop/paper/Figure1/Figure1C.RData')
load('~/Documents/INFIMA-manuscript/Figure2/Figure2-corr/Figure2D.RData')
corr.mat
rownames(corr.mat) <- gsub('Cast','CAST',rownames(corr.mat))
colnames(corr.mat) <- gsub('Cast','CAST',colnames(corr.mat))
corrplot(corr.mat, order = "hclust", hclust.method = 'mcquitty',
addrect = 2, is.corr = F, method = 'color',
tl.col = 'black', tl.cex = 1.3)
pdf('~/Documents/INFIMA-manuscript/Figure2/Figure2-corr/Figure2D.pdf', onefile = F)
corrplot(corr.mat, order = "hclust", hclust.method = 'mcquitty',
addrect = 2, is.corr = F, method = 'color',
tl.col = 'black', tl.cex = 1.3)
dev.off()
### Figure 4 upset
# UpSet plot for DE genes that have at least one local-ATAC-QTL as eQTL
# the genotype of that DE gene is assigned as the best SNP
library(data.table)
library(UpSetR)
library(parallel)
# load('/p/keles/Collab_2014/volumeK/eQTL/output/cis.RData')
# load('/p/keles/Collab_2014/volumeK/AlanAttie4/RData/ATAC_QTL/ATAC-QTL.RData')
# cis.genes <- unique(cis$gene) # 6,418 genes in total
# cis.snps <- unlist(mclapply(cis.genes, function(x) cis[gene == x][order(FDR)][1]$SNP, mc.cores = 20))
#
# genotypes <- NULL
# for(i in 1:length(cis.snps)){
#   print(i)
#   genotypes <- rbind(genotypes, snpData[snpData$Name == cis.snps[i],8:15])
# }
#
# genotypes <- as.data.table(genotypes)
# # > dim(genotypes)
# # [1] 6418    8
# # QC good
#
# up
# genotypes <- as.matrix(genotypes)
# mode(genotypes) <- "integer"
# genotypes[genotypes == 2] <- 1
# genotypes <- as.data.table(genotypes)
# save(cis.genes, cis.snps, genotypes, file = 'Figure4A.RData')
rm(list = ls())
setwd('~/Documents/INFIMA-manuscript/Figure4/Figure4-upset/')
load('Figure4-upset.RData')
### Summary of ATAC-seq peaks compositions ###
# all 8 strains
strains <- c('129','AJ','B6','CAST','NOD','NZO','PWK','WSB')
# color scheme for all 8 strains
colors <- c(rgb(240, 128, 128, maxColorValue = 255, alpha = 255),
rgb(218, 165, 32, maxColorValue = 255, alpha = 255),
rgb(128, 128, 128, maxColorValue = 255, alpha = 255),
rgb(0, 160, 0, maxColorValue = 255, alpha = 255),
rgb(16, 16, 240, maxColorValue = 255, alpha = 255),
rgb(0, 160, 240, maxColorValue = 255, alpha = 255),
rgb(240, 0, 0, maxColorValue = 255, alpha = 255),
rgb(144, 0, 224, maxColorValue = 255, alpha = 255))
# only include the sets with more than 50 genes
metadata <- data.table(strains = strains)
metadata$names <- as.character(metadata$strains)
pdf('Figure4-upset.pdf', onefile = F, width = 8, height = 5.5)
upset(
genotypes,
sets = c('CAST','PWK','WSB','NOD','AJ','NZO','129','B6'),
#sets = c('129', 'AJ', 'B6', 'CAST', 'NOD', 'NZO', 'PWK', 'WSB'),
main.bar.color = 'black',
keep.order = T,
order.by = 'freq',
nintersects = 23,
text.scale = 1.5,
matrix.dot.alpha = 0.1,
sets.bar.color = colors[c(4,7,8,5,2,6,1,3)],
mainbar.y.label = "Number of top local-ATAC-QTL associations with the allele patterns",
sets.x.label = "Set size",
set.metadata = list(data = metadata,
plots = list(
list(
type = "matrix_rows",
column = "names",
colors = c(
`129` = colors[1],
AJ = colors[2],
B6 = colors[3],
CAST = colors[4],
NOD = colors[5],
NZO = colors[6],
PWK = colors[7],
WSB = colors[8]
),
alpha = 1
)
))
)
dev.off()
genotypes
colnames(genotypes) <- gsub('Cast', 'CAST', colnames(genotypes))
pdf('Figure4-upset.pdf', onefile = F, width = 8, height = 5.5)
upset(
genotypes,
sets = c('CAST','PWK','WSB','NOD','AJ','NZO','129','B6'),
#sets = c('129', 'AJ', 'B6', 'CAST', 'NOD', 'NZO', 'PWK', 'WSB'),
main.bar.color = 'black',
keep.order = T,
order.by = 'freq',
nintersects = 23,
text.scale = 1.5,
matrix.dot.alpha = 0.1,
sets.bar.color = colors[c(4,7,8,5,2,6,1,3)],
mainbar.y.label = "Number of top local-ATAC-QTL associations with the allele patterns",
sets.x.label = "Set size",
set.metadata = list(data = metadata,
plots = list(
list(
type = "matrix_rows",
column = "names",
colors = c(
`129` = colors[1],
AJ = colors[2],
B6 = colors[3],
CAST = colors[4],
NOD = colors[5],
NZO = colors[6],
PWK = colors[7],
WSB = colors[8]
),
alpha = 1
)
))
)
dev.off()
pdf('Figure4-upset.pdf', onefile = F, width = 8, height = 5.5)
upset(
genotypes,
sets = c('CAST','PWK','WSB','NOD','AJ','NZO','129','B6'),
#sets = c('129', 'AJ', 'B6', 'CAST', 'NOD', 'NZO', 'PWK', 'WSB'),
main.bar.color = 'black',
keep.order = T,
order.by = 'freq',
nintersects = 23,
text.scale = 1.5,
matrix.dot.alpha = 0.1,
sets.bar.color = colors[c(4,7,8,5,2,6,1,3)],
mainbar.y.label = "Number of top local-ATAC-QTL associations\n with the allele patterns",
sets.x.label = "Set size",
set.metadata = list(data = metadata,
plots = list(
list(
type = "matrix_rows",
column = "names",
colors = c(
`129` = colors[1],
AJ = colors[2],
B6 = colors[3],
CAST = colors[4],
NOD = colors[5],
NZO = colors[6],
PWK = colors[7],
WSB = colors[8]
),
alpha = 1
)
))
)
dev.off()
rm(list = ls())
#### t-SNE plot of samples ####
library(ggplot2)
library(data.table)
library(Rtsne)
load('~/Documents/AlanAttie4/RNA-seq/countmat_13568_protein_coding_UQUA_fixed.RData')
setwd('~/Documents/INFIMA-manuscript/Figure4/Figure4-tsne/')
pseudoCount <- log2(countmat.n + 1)
load('Figure4-tsne.RData')
t.sne
load('Figure4-tsne.RData')
t.sne$strain <- gsub('Cast', 'CAST', t.sne$strain)
g <- ggplot(t.sne, aes(x = x, y = y, color = strain)) + geom_point(size = 2, aes(shape = gender)) + scale_color_manual(values = colors)
g <- g + labs(x = 't-SNE dimension 1', y = 't-SNE dimension 2', color = 'Strain', shape = 'Gender')
pdf('Figure4-tsne.pdf', height = 5, width = 5)
g + theme_classic()
dev.off()
